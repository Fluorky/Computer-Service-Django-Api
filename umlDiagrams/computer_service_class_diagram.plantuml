@startuml

class models.Model{

}
class BasicInfo{
  + name: String
}
class CommonInfo {
  + name: String
  + price: Integer 
  + tax: Double
}
class Person {
  + name: String
  + surname: String
  + email: Email
  + phone_number: String

}
class ServiceRequest {
  + description: String
  + requested_by: Customer
  + status: String
  + owned_by: ServiceTechnician
  + requested_at: DateTime
  + def __str__(self) : constructor
  + (REST API):
  + class ServiceRequestListAPIView(generics.ListCreateAPIView) : view or create service_request
  + class ServiceRequestDetailAPIView(generics.RetrieveUpdateDestroyAPIView) retrieve or update or delete service_request

}
class Invoice {
  + total_amount: Decimal
  + payment_status: Boolean 
  + service_requests: ServiceRequest 
  + parts: Part
  + tax_rate: decimal
  + tax_amount: decimal
  + def __str__(self) : constructor
  + calculate_total_amount_tax()
  + calculate_total_amount()
  + (REST API):
  + class InvoiceListAPIView(generics.ListCreateAPIView) : view or create invoice
  + class InvoiceDetailAPIView(generics.RetrieveUpdateDestroyAPIView) retrieve or update or delete invoice


}
class Part {
  + description: String
  + quantity_in_stock: Integer 
  + def __str__(self) : constructor
  + (REST API):
  + class PartListAPIView(generics.ListCreateAPIView) : view or create part
  + class PartDetailAPIView(generics.RetrieveUpdateDestroyAPIView) retrieve or update or delete part

}
class ServiceTechnician {
  + specialization: String
  + def __str__(self) : constructor
  + (REST API):
  + class ServiceTechnicianListAPIView(generics.ListCreateAPIView) : view or create service_technician
  + class ServiceTechnicainDetailAPIView(generics.RetrieveUpdateDestroyAPIView) retrieve or update or delete service_technician

}
class Customer {
  + address_line1: String
  + address_line2: String
  + postal_code: String
  + city: String
  + state: String
  + country: String
  + def __str__(self) : constructor
  + (REST API):
  + class CustomerListAPIView(generics.ListCreateAPIView) : view or create customer
  + class CustomerDetailAPIView(generics.RetrieveUpdateDestroyAPIView) retrieve or update or delete customer

}

class RepairLog{
  + start_time : DateTime
  + end_time : DateTime
  + serviceRequest : ServiceRequest
  + def __str__(self) : constructor
  + add_repair_log()
  + edit_repair_log()
  + view_repair_log()
  + delete_repair_log()
}

class Warehouse{
  + quantity_to_order : Integer
  + last_one_order : DateTime
  + def __str__(self) : constructor
  + add_warehouse() 
  + edit_warehouse()
  + view_warehouse()
  + delete_warehouse()

}
models.Model --|> BasicInfo
BasicInfo --|> CommonInfo
models.Model --|> Person
models.Model --|> RepairLog
CommonInfo --|>  ServiceRequest
CommonInfo --|> Part
Person --|> ServiceRequest
ServiceRequest *--> Invoice
ServiceRequest *-- Customer : requested_by
ServiceRequest *-- ServiceTechnician : owned_by
Invoice <--* Part
Person --|> ServiceTechnician
Person --|> Customer
ServiceRequest -- RepairLog
Part --|> Warehouse
@enduml
