@startuml

abstract class models.Model {
}

abstract class BasicInfo {
  + name: String
}

abstract class CommonInfo {
  + name: String
  + price: Integer
  + tax: Double
}

abstract class Person {
  + name: String
  + surname: String
  + email: Email
  + phone_number: String
  + address: Address
}

class ServiceRequest {
  + description: String
  + requested_by: Customer
  + assigned_technician: ServiceTechnician
  + status: String
  + requested_at: DateTime
  + completion_deadline: DateTime
  + priority: Integer
  + comments: List<Comment>
  + billing_address: Address
  + shipping_address: Address
  + def __str__(self) : constructor
  + assign_technician(technician: ServiceTechnician)
  + complete_service()
  + escalate_priority()
  + generate_invoice()
  + add_comment(comment: Comment)
  + (REST API):
  + class ServiceRequestListCreateAPIView(generics.ListCreateAPIView): view or create service_request
  + class ServiceRequestDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete service_request
  + class ServiceRequestListAPIView(generics.ListAPIView): view list of service_requests
  + class ServiceRequestDetailAPIView(generics.RetrieveAPIView): retrieve service_request
}

class Comment {
  + text: String
  + posted_by: Person
  + posted_at: DateTime
}

class Invoice {
  + total_amount: Decimal
  + payment_status: Boolean
  + service_requests: List<ServiceRequest>
  + parts: List<Part>
  + billing_address: Address
  + shipping_address: Address
  + def __str__(self) : constructor
  + calculate_total_amount_tax()
  + calculate_total_amount()
  + send_invoice_email()
  + mark_as_paid()
  + (REST API):
  + class InvoiceListCreateAPIView(generics.ListCreateAPIView): view or create invoice
  + class InvoiceDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete invoice
  + class InvoiceListAPIView(generics.ListAPIView): view list of invoices
  + class InvoiceDetailAPIView(generics.RetrieveAPIView): retrieve invoice
}

class Part {
  + description: String
  + quantity_in_stock: Integer
  + supplier: Supplier
  + def __str__(self) : constructor
  + (REST API):
  + class PartListCreateAPIView(generics.ListCreateAPIView): view or create part
  + class PartDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete part
  + class PartListAPIView(generics.ListAPIView): view list of parts
  + class PartDetailAPIView(generics.RetrieveAPIView): retrieve part
}

class Supplier {
  + name: String
  + contact_person: Person
  + address: Address
  + phone_number: String
  + (REST API):
  + class SupplierListCreateAPIView(generics.ListCreateAPIView): view or create supplier
  + class SupplierDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete supplier
  + class SupplierListAPIView(generics.ListAPIView): view list of suppliers
  + class SupplierDetailAPIView(generics.RetrieveAPIView): retrieve supplier
}

class ServiceTechnician {
  + specialization: String
  + assigned_requests: List<ServiceRequest>
  + address: Address
  + def __str__(self) : constructor
  + (REST API):
  + class ServiceTechnicianListCreateAPIView(generics.ListCreateAPIView): view or create service_technician
  + class ServiceTechnicianDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete service_technician
  + class ServiceTechnicianListAPIView(generics.ListAPIView): view list of service_technicians
  + class ServiceTechnicianDetailAPIView(generics.RetrieveAPIView): retrieve service_technician
}

class Customer {
  + address: Address
  + service_requests: List<ServiceRequest>
  + def __str__(self) : constructor
  + place_service_request(request: ServiceRequest)
  + view_history()
  + (REST API):
  + class CustomerListCreateAPIView(generics.ListCreateAPIView): view or create customer
  + class CustomerDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete customer
  + class CustomerListAPIView(generics.ListAPIView): view list of customers
  + class CustomerDetailAPIView(generics.RetrieveAPIView): retrieve customer
}

class Admin {
  + address: Address
  + username: String
  + password: String
  + def __str__(self) : constructor
  + assign_technician(service_request: ServiceRequest, technician: ServiceTechnician)
  + generate_invoice(service_request: ServiceRequest)
  + escalate_service_request(service_request: ServiceRequest)
  + handle_parts(service_request: ServiceRequest)
  + generate_repair_log(service_request: ServiceRequest)
  + view_service_request(service_request: ServiceRequest)
  + update_service_request(service_request: ServiceRequest)
  + delete_service_request(service_request: ServiceRequest)
  + (REST API):
  + class AdminListCreateAPIView(generics.ListCreateAPIView): view or create admin
  + class AdminDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete admin
  + class AdminListAPIView(generics.ListAPIView): view list of admins
  + class AdminDetailAPIView(generics.RetrieveAPIView): retrieve admin
}

class RepairLog {
  + start_time : DateTime
  + end_time : DateTime
  + serviceRequest : ServiceRequest
  + technician_notes: String
  + def __str__(self) : constructor
  + (REST API):
  + class RepairLogListCreateAPIView(generics.ListCreateAPIView): view or create repair_log
  + class RepairLogDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete repair_log
  + class RepairLogListAPIView(generics.ListAPIView): view list of repair_logs
  + class RepairLogDetailAPIView(generics.RetrieveAPIView): retrieve repair_log
}

class Warehouse {
  + quantity_to_order : Integer
  + last_one_order : DateTime
  + parts_in_stock: List<Part>
  + def __str__(self) : constructor
  + (REST API):
  + class WarehouseListCreateAPIView(generics.ListCreateAPIView): view or create warehouse
  + class WarehouseDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete warehouse
  + class WarehouseListAPIView(generics.ListAPIView): view list of warehouses
  + class WarehouseDetailAPIView(generics.RetrieveAPIView): retrieve warehouse
}

class Address {
  + address_line1: String
  + address_line2: String
  + postal_code: String
  + city: String
  + state: String
  + country: String
  + (REST API):
  + class AddressListCreateAPIView(generics.ListCreateAPIView): view or create address
  + class AddressDetailUpdateDeleteAPIView(generics.RetrieveUpdateDestroyAPIView): retrieve or update or delete address
  + class AddressListAPIView(generics.ListAPIView): view list of addresses
  + class AddressDetailAPIView(generics.RetrieveAPIView): retrieve address
}

models.Model --|> BasicInfo
BasicInfo --|> CommonInfo
models.Model --|> Person
models.Model --|> RepairLog
CommonInfo --|>  ServiceRequest
CommonInfo --|> Part

BasicInfo --|> Invoice
ServiceRequest *--> Invoice
ServiceRequest *-- Customer : requested_by
ServiceRequest *-- ServiceTechnician : owned_by
Invoice <--* Part
Part -- Supplier
Person --|> ServiceTechnician
Person --|> Customer
ServiceRequest -- RepairLog
Part --|> Warehouse
ServiceRequest "comments" *-- "1" Comment
ServiceTechnician --|> Admin 
Admin *-- ServiceRequest : Handles
Admin *-- RepairLog : Handles
ServiceTechnician *-- ServiceRequest : Manages
Customer -- Address
Admin -- Address
ServiceTechnician -- Address
Supplier -- Address
ServiceRequest -- Address : billing_address
ServiceRequest -- Address : shipping_address
Invoice -- Address : billing_address
Invoice -- Address : shipping_address

@enduml
